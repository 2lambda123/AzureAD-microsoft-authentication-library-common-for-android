//  Copyright (c) Microsoft Corporation.
//  All rights reserved.
//
//  This code is licensed under the MIT License.
//
//  Permission is hereby granted, free of charge, to any person obtaining a copy
//  of this software and associated documentation files(the "Software"), to deal
//  in the Software without restriction, including without limitation the rights
//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell
//  copies of the Software, and to permit persons to whom the Software is
//  furnished to do so, subject to the following conditions :
//
//  The above copyright notice and this permission notice shall be included in
//  all copies or substantial portions of the Software.
//
//  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
//  THE SOFTWARE.
package com.microsoft.identity.common.internal.broker;

import androidx.annotation.NonNull;
import androidx.annotation.Nullable;

import com.google.gson.annotations.SerializedName;
import com.microsoft.identity.common.internal.cache.ICacheRecord;

import java.io.Serializable;
import java.util.List;

import lombok.Builder;
import lombok.Value;

/**
 * Encapsulates the possible responses from the broker.  Both successful response and error response.
 */
@Builder
@Value
public final class BrokerResult implements Serializable {

    /**
     * Bad of different names for constant definitions.
     */
    private static final class SerializedNames {
        private SerializedNames() { }
        static final String TENANT_PROFILE_CACHE_RECORDS = "tenant_profile_cache_records";
        static final String ACCESS_TOKEN = "access_token";
        static final String ID_TOKEN = "id_token";
        static final String REFRESH_TOKEN = "refresh_token";
        static final String HOME_ACCOUNT_ID = "home_account_id";
        static final String LOCAL_ACCOUNT_ID = "local_account_id";
        static final String USERNAME = "username";
        static final String CLIENT_ID = "client_id";
        static final String FAMILY_ID = "family_id";
        static final String SCOPES = "scopes";
        static final String TOKEN_TYPE = "token_type";
        static final String CLIENT_INFO = "client_info";
        static final String AUTHORITY = "authority";
        static final String ENVIRONMENT = "environment";
        static final String TENANT_ID = "tenant_id";
        static final String EXPIRES_ON = "expires_on";
        static final String EXTENDED_EXPIRES_ON = "ext_expires_on";
        static final String CACHED_AT = "cached_at";
        static final String REFRESH_TOKEN_AGE = "refresh_token_age";
        static final String SUCCESS = "success";
        static final String SERVICED_FROM_CACHE = "serviced_from_cache";

        // Error constants
        /**
         * Error code generated by the broker.
         */
        static final String BROKER_ERROR_CODE = "broker_error_code";

        /**
         * The message accompanying the error code generated by the broker.
         */
        static final String BROKER_ERROR_MESSAGE = "broker_error_message";

        /**
         * The Exception type thrown by the broker.
         */
        static final String BROKER_EXCEPTION_TYPE = "broker_exception_type";

        /**
         * The OAuth2 suberror.
         */
        static final String OAUTH_SUB_ERROR = "oauth_sub_error";
        static final String HTTP_RESPONSE_CODE = "http_response_code";
        static final String HTTP_HEADERS = "http_response_headers";
        static final String HTTP_RESPONSE_BODY = "http_response_body";

        // Telemetry & Diagnostics
        static final String CORRELATION_ID = "correlation_id";
        static final String SPE_RING = "spe_ring";
        static final String CLI_TELEM_ERRORCODE = "cli_telem_error_code";
        static final String CLI_TELEM_SUB_ERROR_CODE = "cli_telem_suberror_code";
    }

    private static final long serialVersionUID = 8606631820514878489L;

    // Success parameters
    /**
     * Access token from the response.
     */
    @Nullable
    @SerializedName(SerializedNames.ACCESS_TOKEN)
    @SuppressWarnings("checkstyle:MemberName") //NOPMD
    private final String accessToken;

    /**
     * ID token from the response.
     */
    @Nullable
    @SerializedName(SerializedNames.ID_TOKEN)
    @SuppressWarnings("checkstyle:MemberName") //NOPMD
    private final String idToken;

    /**
     * Refresh Token  from the response.
     */
    @Nullable
    @SerializedName(SerializedNames.REFRESH_TOKEN)
    @SuppressWarnings("checkstyle:MemberName") //NOPMD
    private final String refreshToken;

    /**
     * Home account id of the user.
     */
    @Nullable
    @SerializedName(SerializedNames.HOME_ACCOUNT_ID)
    @SuppressWarnings("checkstyle:MemberName") //NOPMD
    private final String homeAccountId;

    /**
     * Local account id or user id of the User.
     */
    @Nullable
    @SerializedName(SerializedNames.LOCAL_ACCOUNT_ID)
    @SuppressWarnings("checkstyle:MemberName") //NOPMD
    private final String localAccountId;

    /**
     * Username of the User.
     */
    @Nullable
    @SerializedName(SerializedNames.USERNAME)
    @SuppressWarnings("checkstyle:MemberName") //NOPMD
    private final String userName;

    /**
     * Client id of the application.
     */
    @Nullable
    @SerializedName(SerializedNames.CLIENT_ID)
    @SuppressWarnings("checkstyle:MemberName") //NOPMD
    private final String clientId;

    /**
     * Information to uniquely identify the family that the client application belongs to.
     */
    @Nullable
    @SerializedName(SerializedNames.FAMILY_ID)
    @SuppressWarnings("checkstyle:MemberName") //NOPMD
    private final String familyId;


    /**
     * Scopes requested.
     */
    @Nullable
    @SerializedName(SerializedNames.SCOPES)
    @SuppressWarnings("checkstyle:MemberName") //NOPMD
    private final String scope;

    /**
     * Token type from the response.
     */
    @Nullable
    @SerializedName(SerializedNames.TOKEN_TYPE)
    @SuppressWarnings("checkstyle:MemberName") //NOPMD
    private final String tokenType;

    /**
     * Client Info from the response.
     */
    @Nullable
    @SerializedName(SerializedNames.CLIENT_INFO)
    @SuppressWarnings("checkstyle:MemberName") //NOPMD
    private final String clientInfo;

    /**
     * Authority from the response.
     */
    @Nullable
    @SerializedName(SerializedNames.AUTHORITY)
    @SuppressWarnings("checkstyle:MemberName") //NOPMD
    private final String authority;

    /**
     * Environment used to cache token.
     */
    @Nullable
    @SerializedName(SerializedNames.ENVIRONMENT)
    @SuppressWarnings("checkstyle:MemberName") //NOPMD
    private final String environment;

    /**
     * Tenant id.
     */
    @Nullable
    @SerializedName(SerializedNames.TENANT_ID)
    @SuppressWarnings("checkstyle:MemberName") //NOPMD
    private final String tenantId;

    /**
     * Expires on value for the token.
     */
    @Nullable
    @SerializedName(SerializedNames.EXPIRES_ON)
    @SuppressWarnings("checkstyle:MemberName") //NOPMD
    private final long expiresOn;

    /**
     * Extended expires on value for the token.
     */
    @Nullable
    @SerializedName(SerializedNames.EXTENDED_EXPIRES_ON)
    @SuppressWarnings("checkstyle:MemberName") //NOPMD
    private final long extendedExpiresOn;

    /**
     * Access token cache at time in millis.
     */
    @Nullable
    @SerializedName(SerializedNames.CACHED_AT)
    @SuppressWarnings("checkstyle:MemberName") //NOPMD
    private final long cachedAt;

    /**
     * Client telemetry SPE ring.
     */
    @Nullable
    @SerializedName(SerializedNames.SPE_RING)
    @SuppressWarnings("checkstyle:MemberName") //NOPMD
    private final String speRing;

    /**
     * Refresh token age from client telemetry.
     */
    @Nullable
    @SerializedName(SerializedNames.REFRESH_TOKEN_AGE)
    @SuppressWarnings("checkstyle:MemberName") //NOPMD
    private final String refreshTokenAge;

    /**
     * Boolean to indicate if the request succeeded without exceptions.
     */
    @NonNull
    @SerializedName(SerializedNames.SUCCESS)
    @SuppressWarnings("checkstyle:MemberName") //NOPMD
    private final boolean success;

    /**
     * boolean to indicate if the result was returned from cache.
     */
    @SerializedName(SerializedNames.SERVICED_FROM_CACHE)
    @SuppressWarnings("checkstyle:MemberName") //NOPMD
    private final boolean servicedFromCache;

    // Exception parameters

    /**
     * Error code corresponding to any of the {@link com.microsoft.identity.common.exception.ErrorStrings}.
     */
    @Nullable
    @SerializedName(SerializedNames.BROKER_ERROR_CODE)
    @SuppressWarnings("checkstyle:MemberName") //NOPMD
    private final String errorCode;

    /**
     * Error message.
     */
    @Nullable
    @SerializedName(SerializedNames.BROKER_ERROR_MESSAGE)
    @SuppressWarnings("checkstyle:MemberName") //NOPMD
    private final String errorMessage;

    /**
     * Correlation id of the request.
     */
    @Nullable
    @SerializedName(SerializedNames.CORRELATION_ID)
    @SuppressWarnings("checkstyle:MemberName") //NOPMD
    private final String correlationId;

    /**
     * Sub error code from the error response.
     */
    @Nullable
    @SerializedName(SerializedNames.OAUTH_SUB_ERROR)
    @SuppressWarnings("checkstyle:MemberName") //NOPMD
    private final String subErrorCode;

    /**
     * Http Status code of the error response.
     */
    @Nullable
    @SerializedName(SerializedNames.HTTP_RESPONSE_CODE)
    @SuppressWarnings("checkstyle:MemberName") //NOPMD
    private final int httpStatusCode;

    /**
     * Response headers or the error response in json format.
     */
    @Nullable
    @SerializedName(SerializedNames.HTTP_HEADERS)
    @SuppressWarnings("checkstyle:MemberName") //NOPMD
    private final String httpResponseHeaders;

    /**
     * Response body of the error response.
     */
    @Nullable
    @SerializedName(SerializedNames.HTTP_RESPONSE_BODY)
    @SuppressWarnings("checkstyle:MemberName") //NOPMD
    private final String httpResponseBody;

    /**
     * Client telemetry error code.
     */
    @Nullable
    @SerializedName(SerializedNames.CLI_TELEM_ERRORCODE)
    @SuppressWarnings("checkstyle:MemberName") //NOPMD
    private final String cliTelemErrorCode;

    /**
     * Client telemetry sub error code.
     */
    @Nullable
    @SerializedName(SerializedNames.CLI_TELEM_SUB_ERROR_CODE)
    @SuppressWarnings("checkstyle:MemberName") //NOPMD
    private final String cliTelemSubErrorCode;

    /**
     * Telemetry data.
     */
    @Nullable
    @SerializedName(SerializedNames.TENANT_PROFILE_CACHE_RECORDS)
    @SuppressWarnings("checkstyle:MemberName") //NOPMD
    private final List<ICacheRecord> tenantProfileData;

    /**
     * Broker exception type.
     */
    @Nullable
    @SerializedName(SerializedNames.BROKER_EXCEPTION_TYPE)
    @SuppressWarnings("checkstyle:MemberName") //NOPMD
    private final String exceptionType;

    /**
     * Builder class to alter method names of setters.
     */
    public static class BrokerResultBuilder {
        /**
         * Synonym for errorCode.
         * @param errorCode the error code to set.
         * @return the builder.
         */
        public BrokerResultBuilder oauthSubErrorCode(String errorCode) {
            this.subErrorCode = errorCode;
            return this;
        }

        /**
         * Set the tenant profile data.
         * @param cacheRecordWithTenantProfileData a list of cache records containing the tenant profile data.
         * @return the builder.
         */
        public BrokerResultBuilder tenantProfileRecords(final List<ICacheRecord> cacheRecordWithTenantProfileData) {
            this.tenantProfileData = cacheRecordWithTenantProfileData;
            return this;
        }
    }
}
