// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from cache.djinni

package com.microsoft.identity.common.generated;

import java.util.ArrayList;
import java.util.HashSet;

/** This interface will be implemented in Java and ObjC and can be called from C++. */
public abstract class IStorageManager {
    /**
     * Gets all credentials which match the parameters. May return a partial list of credentials if failed to read all of them, 
     * in which case the status_type may not be "success".
     * correlation_id: optional
     * unique_id: required
     * environment: required
     * client_id: required
     * realm: optional. Empty string means "match all".
     * target: optional. Empty string means "match all".
     * type: required. It's a collection of types. The API should return all types which are present in the set.
     */
    public abstract ReadCredentialsResponse readCredentials(String correlationId, String uniqueId, String environment, String clientId, String realm, String target, HashSet<CredentialType> type);

    /**
     * Writes all credentials in the list to the storage. 
     * correlation_id: optional
     * credentials: the list of credentials to write. They don't have to fall under the same environment, account, or user.
     */
    public abstract OperationStatus writeCredentials(String correlationId, ArrayList<Credential> credentials);

    /** Deletes all matching credentials. Parameters mirror read_credentials. */
    public abstract OperationStatus deleteCredentials(String correlationId, String uniqueId, String environment, String clientId, String realm, String target, HashSet<CredentialType> type);

    /**
     * Reads all accounts present in the cache. May return a partial list of accounts if failed to read all of them, 
     * in which case the status_type may not be "success".
     * correlation_id: optional
     */
    public abstract ReadAccountsResponse readAllAccounts(String correlationId);

    /**
     * Reads an account object, if present. Return status_type other than "success" means that the account wasn't read.
     * correlation_id: optional
     * unique_id: required
     * environment: required
     * realm: required
     */
    public abstract ReadAccountResponse readAccount(String correlationId, String uniqueId, String environment, String realm);

    /**
     * Write an account object into cache. Return status_type other than "success" means that the account wasn't written.
     * correlation_id: optional
     * account: required
     */
    public abstract OperationStatus writeAccount(String correlationId, Account account);

    /**
     * Deletes an account and all associated credentials.
     * Specifically, it removes all associated access tokens and id tokens.
     * It does not remove any refresh tokens or family refresh tokens, because those are associated with multiple accounts. 
     * correlation_id: optional
     * unique_id: required
     * environment: required
     * realm: required
     */
    public abstract OperationStatus deleteAccount(String correlationId, String uniqueId, String environment, String realm);

    /**
     * Deletes all accounts present in the cache and all associated credentials. 
     * This includes all accounts, access tokens, id tokens, refresh tokens, and family refresh tokens. 
     * correlation_id: optional
     */
    public abstract OperationStatus deleteAllAccounts(String correlationId);
}
