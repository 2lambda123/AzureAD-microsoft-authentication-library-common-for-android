/*
 * Azure Identity Labs API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.CustomErrorResponse;
import io.swagger.client.model.User;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for UserApi
 */
@Ignore
public class UserApiTest {

    private final UserApi api = new UserApi();

    /**
     * Gets the Lab User(s) Based on Query Parameters with predefined defaults.   You can override the defaults.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void apiUserGetTest() throws ApiException {
        String usertype = null;
        String userrole = null;
        String mfa = null;
        String protectionpolicy = null;
        String homedomain = null;
        String homeupn = null;
        String b2cprovider = null;
        String federationprovider = null;
        String azureenvironment = null;
        String guesthomeazureenvironment = null;
        String apptype = null;
        String appplatform = null;
        String publicclient = null;
        String signinaudience = null;
        String guesthomedin = null;
        String hasaltid = null;
        String altidsource = null;
        String altidtype = null;
        String passwordpolicyvalidityperiod = null;
        String passwordpolicynotificationdays = null;
        String tokenlifetimepolicy = null;
        String tokentype = null;
        String tokenlifetime = null;
        String isadminconsented = null;
        String optionalclaim = null;
        List<User> response = api.apiUserGet(usertype, userrole, mfa, protectionpolicy, homedomain, homeupn, b2cprovider, federationprovider, azureenvironment, guesthomeazureenvironment, apptype, appplatform, publicclient, signinaudience, guesthomedin, hasaltid, altidsource, altidtype, passwordpolicyvalidityperiod, passwordpolicynotificationdays, tokenlifetimepolicy, tokentype, tokenlifetime, isadminconsented, optionalclaim);

        // TODO: test validations
    }
    /**
     * Gets a single Lab User based on UPN
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void apiUserUpnGetTest() throws ApiException {
        String upn = null;
        List<User> response = api.apiUserUpnGet(upn);

        // TODO: test validations
    }
}
