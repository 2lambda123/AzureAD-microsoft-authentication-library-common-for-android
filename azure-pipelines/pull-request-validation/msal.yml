# File: azure-pipelines\pull-request-validation\msal.yml
# Description: Test new common in ADAL / MSAL / Broker (assembleLocal and testLocalDebugUnitTest)
# Variable: 'ENV_VSTS_MVN_ANDROIDADACCOUNTS_USERNAME' was defined in the Variables tab
# Variable: 'mvnAccessToken' was defined in the Variables tab
# https://docs.microsoft.com/en-us/azure/devops/organizations/accounts/use-personal-access-tokens-to-authenticate
# Variable: 'commonBranchName' was defined in the Variables tab
name: $(date:yyyyMMdd)$(rev:.r)

trigger: none

variables:
- name: robolectricSdkVersion
  value: 28
- name: commonBranch
  value: initValue


resources:
  repositories:
  - repository: msal
    type: github
    name: AzureAD/microsoft-authentication-library-for-android
    ref: dev
    endpoint: ANDROID_GITHUB
  - repository: broker
    type: github
    name: AzureAD/ad-accounts-for-android
    ref: dev
    endpoint: ANDROID_GITHUB
  - repository: adal
    type: github
    name: AzureAD/azure-activedirectory-library-for-android
    ref: dev
    endpoint: ANDROID_GITHUB

stages:
- stage: validateConsumers
  displayName: Validate Consumers
  pool:
    name: Hosted Windows 2019 with VS2019
  jobs:
  # setup
  - job: setupBranch
    displayName: setup branch
    steps:
    - checkout: none
    - task: PowerShell@2
      displayName: Define branch
      inputs:
        targetType: inline
        script: |

          $branch = switch ( '$(Build.Reason)' )
          {
              PullRequest
              {
                '$(System.PullRequest.SourceBranch)'
              }
              Manual
              {
                '$(commonBranchName)'
              }
              default
              {
                ''
              }
          }
          Write-Output "$branch"
          Write-Host "##vso[task.setvariable variable=commonBranch;]$branch"
          Write-Output "$(commonBranch)"
          Write-Output "${{ variables.commonBranch }}"
  # msal
  - job: msalValidation
    displayName: msal validation
    dependsOn:
    - setupBranch
    steps:
    - template: ../templates/steps/automation-cert.yml
    - checkout: msal
      displayName: Checkout msal repository
      clean: true
      submodules: recursive
      persistCredentials: True
    - task: CmdLine@2
      displayName: Checkout common submodule $(commonBranch)
      inputs:
        script: |
          git fetch
          git checkout $(commonBranch)
          git status
          git rev-parse HEAD
        workingDirectory: $(Agent.BuildDirectory)/s/common
    - task: Gradle@2
      displayName: Assemble msal
      inputs:
        tasks: clean msal:assembleLocal
    - task: Gradle@2
      displayName: Run msal Unit tests
      inputs:
        tasks: msal:testLocalDebugUnitTest -Plabtest -ProbolectricSdkVersion=${{variables.robolectricSdkVersion}}
  # broker
  - job: brokerValidation
    displayName: broker validation
    dependsOn:
    - setupBranch
    steps:
    - template: ../templates/steps/automation-cert.yml
    - checkout: broker
      displayName: Checkout broker repository
      clean: true
      submodules: recursive
      persistCredentials: True
    - task: CmdLine@2
      displayName: Checkout common submodule $(commonBranch)
      inputs:
        script: |
          git fetch
          git checkout $(commonBranch)
          git status
          git rev-parse HEAD
        workingDirectory: $(Agent.BuildDirectory)/s/common
    - task: PowerShell@2
      displayName: Install Flatbuffers Compiler
      enabled: False
      inputs:
        targetType: inline
        script: >-
          Write-Output "Downloading flatbuffers"

          $downloadLink = "https://github.com/google/flatbuffers/releases/download/v1.12.0/flatc_windows.zip"

          Write-Output "Using download link: $downloadLink"

          $dest = "$env:Temp\FlatBufferInstaller.zip"

          (New-Object Net.WebClient).DownloadFile($downloadLink, $dest)

          Write-Output "Extracting flatbuffers archive on machine...."

          Expand-Archive -Path $dest -DestinationPath .\flatc-extracted

          Write-Output "Finished extracting flatbuffers archive on machine...."

          Write-Output "Run flatc"

          .\flatc-extracted\flatc

          echo '##vso[task.setvariable variable=path]$(PATH):$(CWD)\flatc-extracted\'

          flatc
    - task: Gradle@2
      displayName: Assemble broker
      inputs:
        tasks: clean AADAuthenticator:assembleLocal
    - task: Gradle@2
      displayName: Run broker Unit tests
      inputs:
        tasks: AADAuthenticator:testLocalDebugUnitTest -Plabtest -ProbolectricSdkVersion=${{variables.robolectricSdkVersion}}
  # adal
  - job: adalValidation
    displayName: adal validation
    dependsOn:
    - setupBranch
    steps:
    - checkout: adal
      displayName: Checkout adal repository
      clean: true
      submodules: recursive
      persistCredentials: True
    - task: CmdLine@2
      displayName: Checkout common submodule $(commonBranch)
      inputs:
        script: |
          git fetch
          git checkout $(commonBranch)
          git status
          git rev-parse HEAD
        workingDirectory: $(Agent.BuildDirectory)/s/common
    - task: Gradle@2
      displayName: Assemble adal
      inputs:
        tasks: clean adal:assembleLocal
    - task: Gradle@2
      displayName: Run adal Unit tests
      inputs:
        tasks: adal:testLocalDebugUnitTest -Plabtest -ProbolectricSdkVersion=${{variables.robolectricSdkVersion}}
