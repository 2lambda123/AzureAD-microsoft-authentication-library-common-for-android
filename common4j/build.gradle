/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.8.3/userguide/building_java_projects.html
 */

plugins {
    id 'java-library'
    id 'com.microsoft.identity.buildsystem' version '0.1.1'
    id 'maven-publish'
}

def desugarCode = false

if (project.hasProperty("sugar")) {
    desugarCode = sugar.toBoolean()
}

buildSystem {
    desugar = desugarCode
}

repositories {
    mavenCentral()
}

apply from: './versioning/version_tasks.gradle'

project.ext.vstsUsername = System.getenv("ENV_VSTS_MVN_ANDROIDCOMMON_USERNAME") != null ? System.getenv("ENV_VSTS_MVN_ANDROIDCOMMON_USERNAME") : project.findProperty("vstsUsername")
project.ext.vstsPassword = System.getenv("ENV_VSTS_MVN_ANDROIDCOMMON_ACCESSTOKEN") != null ? System.getenv("ENV_VSTS_MVN_ANDROIDCOMMON_ACCESSTOKEN") : project.findProperty("vstsMavenAccessToken")

version = getAppVersionName()

task sourcesJar(type: Jar) {
    from sourceSets.main.java.srcDirs
    classifier = 'sources'
    destinationDirectory = reporting.file("$project.buildDir/output/jars")
}

// Task to generate javadoc
task generateJavadoc(type: Javadoc) {
    failOnError false
    title = "Microsoft Identity Common Java"
    source = sourceSets.main.java
    classpath += project.sourceSets.main.compileClasspath

    options.memberLevel = JavadocMemberLevel.PUBLIC
    options.addStringOption('Xdoclint:none', '-quiet')

    exclude '**/BuildConfig.Java'
    exclude '**/R.java'
    destinationDir = reporting.file("$project.buildDir/output/javadoc")
}

// Task to generate javadoc.jar
task javadocJar(type: Jar, dependsOn: generateJavadoc) {
    from javadoc.destinationDir
    classifier 'javadoc'
    destinationDirectory = reporting.file("$project.buildDir/output/jars")
}

jar {
    manifest {
        attributes('Implementation-Title': project.name,
                'Implementation-Version': project.version)
    }
}

publishing {
    publications {
        aar(MavenPublication) {
            groupId 'com.microsoft.identity'
            artifactId 'common4j'
            from components.java

            pom {
                name = 'common4j'
                description = 'This library contains common java code shared between the Active Directory ' +
                        'Authentication Library (ADAL) for Android and the Microsoft ' +
                        'Authentication Library (MSAL) for Android. This library ' +
                        'includes only internal classes and is NOT part of the ' +
                        'public API'
                url = 'https://github.com/AzureAD/microsoft-authentication-library-common-for-android'
                developers {
                    developer {
                        id = 'microsoft'
                        name = 'Microsoft'
                    }
                }
                licenses {
                    license {
                        name = 'MIT License'
                    }
                }
                inceptionYear = '2021'
                scm {
                    url = 'https://github.com/AzureAD/microsoft-authentication-library-common-for-android/tree/master'
                }
                properties = [
                        branch: 'master',
                        version: project.version
                ]
            }
        }
    }

    repositories {
        maven {
            name "vsts-maven-adal-android"
            url "https://identitydivision.pkgs.visualstudio.com/_packaging/AndroidADAL/maven/v1"
            credentials {
                username project.ext.vstsUsername
                password project.ext.vstsPassword
            }
        }
        maven {
            name "vsts-maven-android"
            url 'https://identitydivision.pkgs.visualstudio.com/IDDP/_packaging/Android/maven/v1'
            credentials {
                username project.vstsUsername
                password project.vstsPassword
            }
        }
    }
}

sourceSets {
    main {
        java.srcDirs = ['src/main']
    }
    test {
        java.srcDirs = ['src/test']
    }
}

dependencies {
    compileOnly 'com.github.spotbugs:spotbugs-annotations:3.1.12'

    implementation "com.nimbusds:nimbus-jose-jwt:9.9"
    implementation group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.13'

    implementation "net.jcip:jcip-annotations:1.0"
    implementation "com.google.code.gson:gson:2.8.5"
    implementation 'org.json:json:20180813'

    compileOnly "org.projectlombok:lombok:1.18.12"
    annotationProcessor "org.projectlombok:lombok:1.18.12"

    testCompileOnly 'com.github.spotbugs:spotbugs-annotations:3.1.12'

    testImplementation "junit:junit:4.13"
    testImplementation "org.mockito:mockito-core:3.9.0"
    testCompileOnly "org.projectlombok:lombok:1.18.12"
    testAnnotationProcessor "org.projectlombok:lombok:1.18.12"
}

sourceCompatibility = "1.7"
targetCompatibility = "1.7"

afterEvaluate {
    assemble.dependsOn sourcesJar, javadocJar
}
